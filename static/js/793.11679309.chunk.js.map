{"version":3,"file":"static/js/793.11679309.chunk.js","mappings":"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","sources":["webpack://way-of-the-samurai/./src/components/Profile/Profile.module.css?b512","webpack://way-of-the-samurai/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://way-of-the-samurai/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://way-of-the-samurai/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthNavigateComponent.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Profile_content__OmFCS\",\"posts\":\"Profile_posts__CeXwZ\",\"item\":\"Profile_item__L+d6p\"};","// extracted by mini-css-extract-plugin\nexport default {\"_description\":\"ProfileInfo__description__pLDLd\"};","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    },[props.status]);\r\n\r\n    const activatedEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivatedEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        let body = e.target.value;\r\n        setStatus(body);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {!editMode ?\r\n                <p\r\n                    onDoubleClick={ activatedEditMode }\r\n                >\r\n                    {props.status ? props.status : 'Nope'}\r\n                </p>\r\n                :\r\n                <div>\r\n                    <input\r\n                        onChange={ onStatusChange }\r\n                        value={status}\r\n                        type=\"text\"\r\n                        autoFocus={true}\r\n                        onBlur={ deactivatedEditMode }\r\n                    />\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes._description}>\r\n                <img src={profile.photos.large} alt=\"User's Photo\"/>\r\n                <p><strong>About me: </strong>{ profile.aboutMe }</p>\r\n                <p><strong>Full name: </strong>{ profile.fullName }</p>\r\n                <h3>Contacts:</h3>\r\n                <ul>\r\n                    <li>{profile.contacts.facebook}</li>\r\n                    <li>{profile.contacts.github}</li>\r\n                    <li>{profile.contacts.instagram}</li>\r\n                    <li>{profile.contacts.twitter}</li>\r\n                    <li>{profile.contacts.vk}</li>\r\n                </ul>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n                <p><strong>looking for a job: </strong>{ profile.lookingForAJob ? 'Of course' : 'No thanks'}</p>\r\n                <p><strong>looking for a job description: </strong>{profile.lookingForAJobDescription ? 'Yep' : 'Nope'}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"_posts\":\"MyPosts__posts__ugVTY\",\"_posts__block\":\"MyPosts__posts__block__h9gr0\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__Me3VF\",\"item__span\":\"Post_item__span__Fwzjr\"};","import React from 'react';\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = ({message, likesCount}) => {\r\n    return (\r\n        <div className={classes.item}>\r\n            <h3>Username</h3>\r\n            <img\r\n                src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSF7iZAaYp5jiRX44FeGVJ2wMrY4tnqhPdb_A&usqp=CAU\"\r\n                alt=\"avatar\"/>\r\n            <p>{ message }</p>\r\n            <span className={classes.item__span}>Likes { likesCount }</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst MyPosts = ({ posts, newPostText, addPost, updateNewPostText}) => {\r\n\r\n    let postsElement = posts\r\n        .map((post, index) =>\r\n            <Post\r\n                key={index}\r\n                message={post.message}\r\n                likesCount={post.likesCount}\r\n            />\r\n    );\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onPostChange = () => {\r\n        let text = newPostElement.current.value;\r\n        updateNewPostText(text);\r\n    };\r\n\r\n    return (\r\n        <section className={classes._posts__block}>\r\n\r\n            <h3>My post</h3>\r\n            <div>\r\n                <div>\r\n                    <textarea\r\n                        onChange={ onPostChange }\r\n                        ref={ newPostElement }\r\n                        value={ newPostText }\r\n                        placeholder='Enter text'\r\n                        name='field'\r\n                    />\r\n                </div>\r\n\r\n                <button\r\n                    onClick={ addPost }\r\n                >\r\n                    Add post\r\n                </button>\r\n            </div>\r\n\r\n            <div className={classes._posts}>\r\n                { postsElement }\r\n            </div>\r\n\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport { addPost, updateNewPostText } from '../../../redux/profileReducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n    };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, { addPost, updateNewPostText })(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport classes from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <section className={classes}>\r\n            <ProfileInfo\r\n                profile={ props.profile }\r\n                status={ props.status }\r\n                updateStatus={ props.updateStatus }\r\n            />\r\n            <MyPostsContainer />\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import React, {useEffect} from 'react';\r\nimport Profile from './Profile';\r\nimport {connect, useSelector} from 'react-redux';\r\nimport {getUserProfile, getUserStatus, updateUserStatus} from '../../redux/profileReducer';\r\nimport {useParams} from 'react-router-dom';\r\nimport {compose} from 'redux';\r\nimport {withAuthNavigateComponent} from '../../hoc/withAuthNavigateComponent';\r\n\r\nconst ProfileContainer = (props) => {\r\n    let {userId} = useParams();\r\n    let auth = useSelector(state => state.auth.userId)\r\n\r\n    if (!userId) {\r\n        userId = auth;\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.getUserProfile(userId);\r\n        props.getUserStatus(userId);\r\n    }, []);\r\n\r\n    return <Profile\r\n        {...props}\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateUserStatus}\r\n    />;\r\n};\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n});\r\n\r\nexport default compose(\r\n    withAuthNavigateComponent,\r\n    connect(mapStateToProps, { getUserProfile, getUserStatus, updateUserStatus })\r\n)(ProfileContainer);\r\n","import {Navigate} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport React from 'react';\r\n\r\nexport const withAuthNavigateComponent = (Component) => {\r\n\r\n    const NavigateComponent = (props) => {\r\n        if (!props.isAuth) return <Navigate to='/login'/>\r\n        return <Component {...props}/>;\r\n    }\r\n\r\n    let mapStateToPropsForNavigate = (state) => ({\r\n        isAuth: state.auth.isAuth\r\n    });\r\n\r\n    return connect(mapStateToPropsForNavigate)(NavigateComponent);\r\n};\r\n"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","body","target","value","type","autoFocus","onBlur","updateStatus","onDoubleClick","profile","className","classes","src","photos","large","alt","aboutMe","fullName","contacts","facebook","github","instagram","twitter","vk","lookingForAJob","lookingForAJobDescription","Preloader","message","likesCount","posts","newPostText","addPost","updateNewPostText","postsElement","map","post","index","newPostElement","React","text","current","ref","placeholder","name","onClick","connect","state","profilePage","MyPosts","compose","withAuthNavigateComponent","getUserProfile","getUserStatus","updateUserStatus","userId","useParams","auth","useSelector","Component","isAuth","to"],"sourceRoot":""}